{"version":3,"sources":["snake-engine.js"],"names":["$","document","ready","table","rowIndex","cellIndex","direction","hitMark","snake","x","y","head","timing","stopTimer","score","audio","getElementById","gameover","_","forEach","children","row","index","addClass","cell","attr","random","Math","floor","getNextCords","xVal","parseInt","yVal","checkIfGameHasEnded","findIndex","removeClass","checkIfHitMark","pointerX","pointerY","xMarkCords","yMarkCords","newMark","text","getnew","moveSnake","currentPos","nextPos","undefined","unshift","splice","snakePart","resetGame","move","keydown","e","which","paused","play","pause","preventDefault","window","setTimeout"],"mappings":"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","file":"snake-engine.js","sourcesContent":["/* global $, _ */\n$( document ).ready(function() {\n    var table = $('table');\n    var rowIndex;\n    var cellIndex;\n    var direction = 'DOWN';\n    var hitMark = false;\n    var snake = [{x: 7, y: 7, head: true}];\n    var timing = 240;\n    var stopTimer = false;\n    var score = 0;\n    var audio = document.getElementById(\"bg-audio\");\n    var gameover = false;\n\n\n    _.forEach(table.children().children(), function (row, index) {\n        rowIndex = index;\n        $(row).addClass('row-' + rowIndex);\n        _.forEach($(row).children(), function (cell, index) {\n            $(cell).attr('x', rowIndex);\n            $(cell).attr('y', index);\n\n        });\n    });\n    $('td[x=\"'+ random()+'\"][y=\"'+ random()+'\"]').addClass('mark');\n\n    function random() {\n        return Math.floor(Math.random() * 14) + 0;\n    }\n\n    function getNextCords(x, y) {\n        var xVal = parseInt(x);\n        var yVal = parseInt(y);\n\n        switch(direction){\n            case 'LEFT':\n                yVal -= 1;\n            break;\n            case 'UP':\n                xVal -= 1;\n            break;\n            case 'RIGHT':\n                yVal += 1;\n            break;\n            case 'DOWN':\n                xVal += 1;\n            break;\n        }\n\n        return {\n            x: xVal,\n            y: yVal\n        };\n    }\n\n    function checkIfGameHasEnded(x, y) {\n        if( x == -1 || x > 13 ||\n            y == -1 || y > 13 ||\n            _.findIndex(snake, {x: x, y: y}) > -1){\n            stopTimer = true;\n            gameover = true;\n            $('#game-over').removeClass('hidden');\n        }\n\n    }\n\n    function checkIfHitMark(pointerX, pointerY) {\n        var xMarkCords = parseInt($('.mark').attr('x'));\n        var yMarkCords = parseInt($('.mark').attr('y'));\n        var newMark;\n\n        if(pointerX === xMarkCords && pointerY === yMarkCords){\n            hitMark = true;\n            score += 10;\n            $('#score span').text(score);\n\n            $('.mark').removeClass('mark');\n\n            (function getnew() {\n                newMark = {\n                    x: random(),\n                    y: random()\n                };\n\n                // if new mark is on existing snake\n                if(_.findIndex(snake, {x: newMark.x, y: newMark.y}) > -1) {\n                    getnew();\n                }\n            })();\n\n            $('td[x=\"'+ newMark.x+'\"][y=\"'+ newMark.y+'\"]').addClass('mark');\n\n            if(timing > 99){ // max speed increase is 100\n                timing -= 7;\n            }\n        }\n    }\n\n\n    function moveSnake(currentPos, nextPos) {\n        if(hitMark){\n            hitMark = false;\n            snake[_.findIndex(snake,'head')].head = undefined;\n            snake.unshift({x: nextPos.x, y: nextPos.y, head: true});\n        }else {\n            snake[_.findIndex(snake,'head')].head = undefined;\n\n            snake.unshift({x: nextPos.x, y: nextPos.y, head: true});\n            snake.splice(-1,1);\n        }\n        $('.snake').removeClass('snake');\n\n        _.forEach(snake, function (snakePart) {\n            $('td[x=\"'+ snakePart.x+'\"][y=\"'+ snakePart.y+'\"]').addClass('snake');\n        });\n\n    }\n\n    function resetGame() {\n        snake = [{x: 7, y: 7, head: true}];\n        stopTimer = false;\n        gameover = false;\n        timing = 300;\n        score = 0;\n        $('#score span').text(score);\n        $('#game-over').addClass('hidden');\n        move();\n    }\n\n    $(document).keydown(function(e) {\n        // if(!executredLast) return;\n        switch(e.which) {\n            case 37:\n                if(direction !== 'RIGHT'){\n                    direction = 'LEFT';\n                }\n            break;\n\n            case 38:\n                if(direction !== 'DOWN'){\n                    direction = 'UP';\n                }\n            break;\n\n            case 39:\n                if(direction !== 'LEFT'){\n                    direction = 'RIGHT';\n                }\n            break;\n\n            case 40:\n                if(direction !== 'UP'){\n                    direction = 'DOWN';\n                }\n            break;\n\n            case 80: // p\n                if (audio.paused) {\n                    audio.play();\n                } else {\n                    audio.pause();\n                }\n            break;\n\n            case 32: // spacebar\n                if(gameover){\n                    resetGame();\n                    break;\n                }\n                if(stopTimer){\n                    stopTimer = false;\n                    move();\n                }else {\n                    stopTimer = true;\n                }\n                if (audio.paused) {\n                    audio.play();\n                } else {\n                    audio.pause();\n                }\n\n            break;\n\n            default: return; // exit this handler for other keys\n        }\n        e.preventDefault(); // prevent the default action (scroll / move caret)\n    });\n\n    function move() {\n        if(stopTimer) { return; }\n\n        var currentPos = {\n            x: snake[_.findIndex(snake, 'head')].x,\n            y: snake[_.findIndex(snake, 'head')].y\n        };\n\n        var nextPos = getNextCords(currentPos.x, currentPos.y);\n        checkIfGameHasEnded(nextPos.x, nextPos.y);\n        checkIfHitMark(nextPos.x, nextPos.y);\n        moveSnake(currentPos, nextPos);\n\n        window.setTimeout(move, timing);\n    }\n\n    move();\n\n});\n"]}